
            <div id="loadlink">
                <p><a>Open this file in the Lurch web app</a></p>
                <script language="javascript">
                    const link = document.querySelector( '#loadlink > p > a' )
                    const thisURL = encodeURIComponent( window.location.href )
                    link?.setAttribute( 'href', 'http://localhost:3000/?load=' + thisURL )
                </script>
            </div>
        
            <div id="metadata" style="display: none;"><div data-category="settings" data-key="shell style" data-value-type="json">"minimal"</div><div data-category="main" data-key="header" data-value-type="html"></div></div>
            <div id="document"><h1>Set Theory Theorems</h1>
<p>Once we have proven theorems it is convenient to add the most useful ones as new rules rather than reproving them from scratch each time we need to use one.&nbsp; This library contains some of the most useful theorems about elementary Set Theory that can be prove from the Set Theory library.&nbsp; All of the rules from the Set Theory library are also available.</p>
<hr>
<h3>Theorems</h3>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Theorem (empty set):&nbsp;</strong> <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;{ } subset X&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__left-right" style="margin-top: 0em; height: 0em;"><span class="ML__small-delim ML__open">{</span><span class="ML__small-delim ML__close">}</span></span><span class="ML__cmr">&sube;</span><span class="ML__mathit" style="margin-right: 0.08em;">X</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Theorem (all gone):&nbsp; </strong><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;X setminus X = { }&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.08em;">X</span><span class="ML__cmr">âˆ–</span><span class="ML__mathit" style="margin-right: 0.08em;">X</span><span class="ML__cmr">=</span><span class="ML__left-right" style="margin-top: 0em; height: 0em;"><span class="ML__small-delim ML__open">{</span><span class="ML__small-delim ML__close">}</span></span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Theorem (identity):</strong> &nbsp;<span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;{} union A = A&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__left-right" style="margin-top: 0em; height: 0em;"><span class="ML__small-delim ML__open">{</span><span class="ML__small-delim ML__close">}</span></span><span class="ML__cmr">&cup;</span><span class="ML__mathit">A</span><span class="ML__cmr">=</span><span class="ML__mathit">A</span></span></span></span></span>&nbsp; and <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;A=A union { }&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">A</span><span class="ML__cmr">=</span><span class="ML__mathit">A</span><span class="ML__cmr">&cup;</span><span class="ML__left-right" style="margin-top: 0em; height: 0em;"><span class="ML__small-delim ML__open">{</span><span class="ML__small-delim ML__close">}</span></span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Theorem (nothing in common):</strong> &nbsp;<span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;{ } intersect A={}&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__left-right" style="margin-top: 0em; height: 0em;"><span class="ML__small-delim ML__open">{</span><span class="ML__small-delim ML__close">}</span></span><span class="ML__cmr">&cap;</span><span class="ML__mathit">A</span><span class="ML__cmr">=</span><span class="ML__left-right" style="margin-top: 0em; height: 0em;"><span class="ML__small-delim ML__open">{</span><span class="ML__small-delim ML__close">}</span></span></span></span></span></span> and <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;A intersect {} = {}&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">A</span><span class="ML__cmr">&cap;</span><span class="ML__left-right" style="margin-top: 0em; height: 0em;"><span class="ML__small-delim ML__open">{</span><span class="ML__small-delim ML__close">}</span></span><span class="ML__cmr">=</span><span class="ML__left-right" style="margin-top: 0em; height: 0em;"><span class="ML__small-delim ML__open">{</span><span class="ML__small-delim ML__close">}</span></span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Theorem (idempotency): </strong>&nbsp;<span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;A cap A = A&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">A</span><span class="ML__cmr">&cap;</span><span class="ML__mathit">A</span><span class="ML__cmr">=</span><span class="ML__mathit">A</span></span></span></span></span> and <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;A = A cap A &quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">A</span><span class="ML__cmr">=</span><span class="ML__mathit">A</span><span class="ML__cmr">&cap;</span><span class="ML__mathit">A</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Theorem (idempotency):</strong> <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;A cup A = A&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">A</span><span class="ML__cmr">&cup;</span><span class="ML__mathit">A</span><span class="ML__cmr">=</span><span class="ML__mathit">A</span></span></span></span></span> and <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;A = A cup A&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">A</span><span class="ML__cmr">=</span><span class="ML__mathit">A</span><span class="ML__cmr">&cup;</span><span class="ML__mathit">A</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Theorem (excluded middle):</strong> <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;x in A union A'&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">x</span><span class="ML__cmr">&isin;</span><span class="ML__mathit">A</span><span class="ML__cmr">&cup;</span><span class="ML__mathit">A</span><span class="ML__msubsup"><span class="ML__vlist-t"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 0.81em;"><span style="top: -3.41em; margin-right: 0.05em;"><span style="height: 0.39em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&prime;</span></span></span></span></span></span></span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Theorem (double negative):</strong> <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;(A')'=A&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__left-right" style="margin-top: 0em; height: 0.801892em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">A</span><span class="ML__msubsup"><span class="ML__vlist-t"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 0.81em;"><span style="top: -3.41em; margin-right: 0.05em;"><span style="height: 0.39em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&prime;</span></span></span></span></span></span></span><span class="ML__small-delim ML__close">)</span></span><span class="ML__msubsup"><span class="ML__vlist-t"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 0.93em;"><span style="top: -3.53em; margin-right: 0.05em;"><span style="height: 0.39em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&prime;</span></span></span></span></span></span></span><span class="ML__cmr">=</span><span class="ML__mathit">A</span></span></span></span></span></p>
</div>
<hr>
<p>&nbsp;</p></div>
        