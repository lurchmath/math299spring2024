
            <div id="loadlink">
                <p><a>Open this file in the Lurch web app</a></p>
                <script language="javascript">
                    const link = document.querySelector( '#loadlink > p > a' )
                    const thisURL = encodeURIComponent( window.location.href )
                    link?.setAttribute( 'href', 'http://localhost:8080/?load=' + thisURL )
                </script>
            </div>
        
            <div id="metadata" style="display: none;"><div data-category="settings" data-key="shell style" data-value-type="json">"minimal"</div><div data-category="main" data-key="header" data-value-type="html"><h1>Propositional Logic</h1>
<p>This is a basic library of the rules that define a natural deduction style formal system for Propositional Logic.</p>
<hr>
<h3>Constants</h3>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Declare ⇔, and, ⇒, or, ¬, contradiction&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Declare ⇔,, and,, ⇒,, or,, ¬,, and contradiction</span></span></span></span></span></p>
<h3>Rules</h3>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p style="text-align: left;"><strong>and+</strong></p>
<p style="text-align: left;"><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W and V&quot;" data-metadata_latex="&quot; W\\text{ and } V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> and </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>and-</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W and V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> and </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;" data-metadata_latex="&quot;W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>implies+</strong></p>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W implies V&quot;" data-metadata_latex="&quot; W\\Rightarrow V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>implies- (modus ponens)</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W implies V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>iff+</strong></p>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span>&nbsp;</p>
</div>
<p>&nbsp;</p>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;" data-metadata_latex="&quot;W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W iff V&quot;" data-metadata_latex="&quot; W\\Leftrightarrow V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇔</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>iff-</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W iff V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇔</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;subproof&quot;" data-shell_title="">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;subproof&quot;" data-shell_title="">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;" data-metadata_latex="&quot;W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>or+</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W or V&quot;" data-metadata_latex="&quot; W\\text{ or } V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V or W&quot;" data-metadata_latex="&quot; V\\text{ or } W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>or- (proof by cases)</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W or V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W implies U&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.11em;">U</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume V implies U&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.11em;">U</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;U&quot;" data-metadata_latex="&quot;U&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.11em;">U</span></span></span></span></span>&nbsp;</p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>not+ (proof by contradiction)</strong></p>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;contradiction&quot;" data-metadata_latex="&quot;\\rightarrow\\leftarrow&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">contradiction</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not W&quot;" data-metadata_latex="&quot;\\neg W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>not- (proof by contradiction)</strong></p>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p>&nbsp;<span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;contradiction&quot;" data-metadata_latex="&quot;\\rightarrow\\leftarrow&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">contradiction</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;" data-metadata_latex="&quot;W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>contradiction+</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;→←&quot;" data-metadata_latex="&quot;\\rightarrow\\leftarrow&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">contradiction</span></span></span></span></span></p>
</div>
<hr>
<h3><strong>Example</strong></h3>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;theorem&quot;" data-shell_title="Theorem:" data-validation_result="valid">
<p><strong>Theorem: </strong><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;If not (P implies Q)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">If </span><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.8777699999999999em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit">Q</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span> then <span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P and not Q&quot;" data-metadata_latex="&quot; P\\text{ and } \\neg Q&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__text"> and </span><span class="ML__ams">¬</span><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span>.</p>
</div>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;proof&quot;" data-shell_title="Proof:" data-validation_result="valid">
<p><strong>Proof:</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not (P implies Q)&quot;" data-metadata_latex="&quot;\\text{Assume }\\neg \\left( P\\Rightarrow Q\\right)&quot;" data-metadata_given="true"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.8777699999999999em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit">Q</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;subproof&quot;" data-shell_title="" data-validation_result="valid">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not P&quot;" data-metadata_latex="&quot;\\text{Assume }\\neg P&quot;" data-metadata_given="true"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span></span></span></span></span></p>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;subproof&quot;" data-shell_title="" data-validation_result="valid">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume P&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">P</span></span></span></span></span></p>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;subproof&quot;" data-shell_title="" data-validation_result="valid">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;:not Q&quot;" data-metadata_latex="&quot;\\text{Assume }\\neg Q&quot;" data-metadata_given="true"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">:</span><span class="ML__ams">¬</span><span class="ML__mathit">Q</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;contradiction&quot;" data-metadata_latex="&quot;\\rightarrow\\leftarrow&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">contradiction</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Q&quot;" data-metadata_latex="&quot;Q&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P implies Q&quot;" data-metadata_latex="&quot; P\\Rightarrow Q&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span><br><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;contradiction&quot;" data-metadata_latex="&quot;\\rightarrow\\leftarrow&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">contradiction</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P&quot;" data-metadata_latex="&quot;P&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;subproof&quot;" data-shell_title="" data-validation_result="valid">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume Q&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit">Q</span></span></span></span></span></p>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;subproof&quot;" data-shell_title="" data-validation_result="valid">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume P&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">P</span></span></span></span></span><br><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Q&quot;" data-metadata_latex="&quot;Q&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P implies Q&quot;" data-metadata_latex="&quot; P\\Rightarrow Q&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span><br><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;contradiction&quot;" data-metadata_latex="&quot;\\rightarrow\\leftarrow&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">contradiction</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not Q&quot;" data-metadata_latex="&quot;\\neg Q&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
<p>Therefore, <span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P and not Q&quot;" data-metadata_latex="&quot; P\\text{ and } \\neg Q&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__text"> and </span><span class="ML__ams">¬</span><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span>, as desired. <br>∎</p>
</div>
<hr>
<h1>Predicate Logic with Equality</h1>
<p>This is a basic library of the rules that define a natural deduction style formal system for Predicate Logic with equality.&nbsp;</p>
<hr>
<div>
<h3>Constants</h3>
<div><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Declare ∀, ∃, ∃!, =&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Declare ∀,, ∃,, ∃!,, and =</span></span></span></span></span> to be constants.</div>
<h3>Quantifier Rules</h3>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;">forall+</strong></p>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Let z&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Let </span><span class="ML__mathit" style="margin-right: 0.05em;">z</span></span></span></span></span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(a variable declaration)&nbsp;</p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(z)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit" style="margin-right: 0.05em;">z</span><span class="ML__cmr">)</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;forall x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∀</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">x</span><span class="ML__cmr">)</span></span></span></span></span>&nbsp;</p>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>forall-</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume forall x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cmr">∀</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">x</span><span class="ML__cmr">)</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(t)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">t</span><span class="ML__cmr">)</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>exists+</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume 𝜆P(t)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">t</span><span class="ML__cmr">)</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;exists x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∃</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">x</span><span class="ML__cmr">)</span></span></span></span></span></p>
</div>
</div>
<div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>exists-</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume exists x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cmr">∃</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">x</span><span class="ML__cmr">)</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(c) for some c&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">c</span><span class="ML__cmr">)</span><span class="ML__text"> for some </span><span class="ML__mathit">c</span></span></span></span></span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (constant declaration)</p>
</div>
<h3>Equality Rules</h3>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>reflexivity&nbsp; &nbsp;</strong><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W=W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">=</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>substitution</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume w=v&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.03em;">w</span><span class="ML__cmr">=</span><span class="ML__mathit" style="margin-right: 0.04em;">v</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume 𝜆P(w)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit" style="margin-right: 0.03em;">w</span><span class="ML__cmr">)</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(v)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit" style="margin-right: 0.04em;">v</span><span class="ML__cmr">)</span></span></span></span></span>&nbsp;</p>
</div>
</div>
<h3>Unique Existence Rules</h3>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>unique existence-</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume ∃!x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cmr">∃!</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">x</span><span class="ML__cmr">)</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(c) and (forall y.(𝜆P(y) implies y=c)) for some c&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">c</span><span class="ML__cmr">)</span><span class="ML__text"> and </span><span class="ML__left-right" style="margin-top: -0.25em; height: 1em;"><span class="ML__small-delim ML__open">(</span><span class="ML__cmr">∀</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">.</span><span class="ML__left-right" style="margin-top: -0.25em; height: 1em;"><span class="ML__small-delim ML__open">(</span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">)</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">=</span><span class="ML__mathit">c</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> for some </span><span class="ML__mathit">c</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>unique existence+</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume 𝜆P(t)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">t</span><span class="ML__cmr">)</span></span></span></span></span></p>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Let y be such that 𝜆P(y)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Let </span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__text"> be such that </span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">)</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;y=t&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">=</span><span class="ML__mathit">t</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;∃!x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∃!</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="lcGreek ML__mathit">λ</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">(</span><span class="ML__mathit">x</span><span class="ML__cmr">)</span></span></span></span></span>&nbsp;</p>
</div>
<hr>
<h3><strong>Example</strong></h3>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;theorem&quot;" data-shell_title="Theorem:" data-validation_result="valid">
<p><strong>Theorem:</strong> <span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;If exists x. forall y. P(x,y)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">If </span><span class="ML__cmr">∃</span><span class="ML__mathit">x</span><span class="ML__cmr">.∀</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">.</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.625em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__cmr">,</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span> then <span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;forall y.exists x.P(x,y)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∀</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">.∃</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.625em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__cmr">,</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__small-delim ML__close">)</span></span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;proof&quot;" data-shell_title="Proof:" data-validation_result="valid">
<p><strong>Proof:</strong><br><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume exists x. forall y. P(x,y)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cmr">∃</span><span class="ML__mathit">x</span><span class="ML__cmr">.∀</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">.</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.625em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__cmr">,</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;forall y. P(c,y) for some c&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∀</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">.</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.625em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">c</span><span class="ML__cmr">,</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> for some </span><span class="ML__mathit">c</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;subproof&quot;" data-shell_title="" data-validation_result="valid">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Let s&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Let </span><span class="ML__mathit">s</span></span></span></span></span>&nbsp;be arbitrary</p>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P(c,s)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.625em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">c</span><span class="ML__cmr">,</span><span class="ML__mathit">s</span><span class="ML__small-delim ML__close">)</span></span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;exists x.P(x,s)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∃</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.625em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__cmr">,</span><span class="ML__mathit">s</span><span class="ML__small-delim ML__close">)</span></span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
</div>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;forall y. exists x. P(x,y)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∀</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">.∃</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.625em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__cmr">,</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__small-delim ML__close">)</span></span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span>&nbsp;</p>
<p>∎</p>
</div>
<hr>
<p>&nbsp;</p>
</div>
</div>
<h1>Logic Theorems</h1>
<p>This is a basic library of the rules that are theorems provable in the system defined by the rules in the Predicate Logic with Equality library.</p>
<hr>
<h3>Constants</h3>
<p>No additional constants required.</p>
<h3>Theorems (as rules)</h3>
<div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>excluded middle</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W or not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>double negative</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (not W) ≡ W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: -0.2em; height: 0.8999999999999999em;"><span class="ML__small-delim ML__open">(</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">≡</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>commutativity of 'or'</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W or V &quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V or W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>associativity of 'or'</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;(W or V) or U ≡ W or (V or U)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.11em;">U</span><span class="ML__cmr">≡</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.11em;">U</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
</div>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>alternate definition of 'implies'</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W implies V ≡ not W or V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__cmr">≡</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>alternate or-</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W or V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>alternate or-</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W or V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>negated implication</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (W implies V)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span> &nbsp;<span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;≡&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">≡</span></span></span></span></span>&nbsp; <span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span> and&nbsp; <span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>contrapositive</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W implies V &quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span> &nbsp;<span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;≡ &quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">≡</span></span></span></span></span> &nbsp;<span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not V implies not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__cmr">⇒</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>DeMorgan's Law</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (W and V) ≡ not W or not V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: 0em; height: 0.69444em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> and </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">≡</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>DeMorgan's Law</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (W or V) ≡ not W and not V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">≡</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> and </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom atom-is-selected" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Anything follows from a contradiction</strong></p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume →←&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume contradiction</span></span></span></span></span>&nbsp;</p>
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<hr>
<h3>Example</h3>
<p>These theorems are strong enough to deduce this immediately without any further proof needed.</p>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;theorem&quot;" data-shell_title="Theorem:" data-validation_result="valid">
<p><strong>Theorem: </strong><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;If not ( (P implies Q) or (P implies R) ) &quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">If </span><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: -0.25em; height: 1em;"><span class="ML__small-delim ML__open">(</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.8777699999999999em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit">Q</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> or </span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.01em;">R</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span> then&nbsp; <span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span> and <span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not Q&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span> and <span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not R&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.01em;">R</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span>.</p>
</div>
</div>
<div class="lurch-atom atom-is-selected" title="Good work!" data-metadata_type="&quot;proof&quot;" data-shell_title="Proof:" data-validation_result="valid">
<p><span class="lurch-atom atom-is-selected" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not ( (P implies Q) or (P implies R) ) &quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: -0.25em; height: 1em;"><span class="ML__small-delim ML__open">(</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.8777699999999999em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit">Q</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> or </span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.01em;">R</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (P implies Q) and not (P implies R)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.8777699999999999em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit">Q</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> and </span><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.01em;">R</span><span class="ML__small-delim ML__close">)</span></span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span>&nbsp; by DeMorgan's Law.</p>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (P implies Q)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.8777699999999999em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit">Q</span><span class="ML__small-delim ML__close">)</span></span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (P implies R)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.01em;">R</span><span class="ML__small-delim ML__close">)</span></span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P and not Q&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__text"> and </span><span class="ML__ams">¬</span><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
<p><span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P and not R&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span><span class="ML__text"> and </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.01em;">R</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span></p>
<p>therefore, <span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;P&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">P</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span> and &nbsp;<span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not Q&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit">Q</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span> and <span class="lurch-atom atom-is-selected" title="Good work!" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not R&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.01em;">R</span></span></span></span><span class="lurch-atom-suffix"><span class="feedback-marker-valid">&nbsp;</span></span></span>.</p>
<p>∎</p>
</div>
</div><div class="lurch-atom" contenteditable="false" data-metadata_type="&quot;dependency&quot;" data-metadata_description="&quot;none&quot;" data-metadata_filename="&quot;../math/Logic-theorems-Rules.lurch&quot;" data-metadata_source="&quot;web&quot;" data-metadata_content="&quot;&quot;" data-metadata_auto-refresh="true" style="border: 1px solid gray; padding: 0px 1em;"><div class="lurch-atom-metadata" style="display: none;"><div data-key="content">
            <div id="loadlink">
                <p><a>Open this file in the Lurch web app</a></p>
                
            </div>
        
            <div id="metadata" style="display: none;"><div data-category="settings" data-key="shell style" data-value-type="json">"minimal"</div><div data-category="main" data-key="header" data-value-type="html"><div class="lurch-atom" contenteditable="false" data-metadata_type="&quot;dependency&quot;" data-metadata_description="&quot;none&quot;" data-metadata_filename="&quot;../math/Pred-Rules.lurch&quot;" data-metadata_source="&quot;web&quot;" data-metadata_content="&quot;&quot;" data-metadata_auto-refresh="true" style="border: 1px solid gray; padding: 0px 1em;"><div class="lurch-atom-metadata" style="display: none;"><div data-key="content">
            <div id="loadlink">
                <p><a>Open this file in the Lurch web app</a></p>
                
            </div>
        
            <div id="metadata" style="display: none;"><div data-category="settings" data-key="shell style" data-value-type="json">"minimal"</div><div data-category="main" data-key="header" data-value-type="html"><div class="lurch-atom" contenteditable="false" data-metadata_type="&quot;dependency&quot;" data-metadata_description="&quot;none&quot;" data-metadata_filename="&quot;../math/Prop-Rules.lurch&quot;" data-metadata_source="&quot;web&quot;" data-metadata_content="&quot;&quot;" data-metadata_auto-refresh="true" style="border: 1px solid gray; padding: 0px 1em;"><div class="lurch-atom-metadata" style="display: none;"><div data-key="content">
            <div id="loadlink">
                <p><a>Open this file in the Lurch web app</a></p>
                
            </div>
        
            <div id="metadata" style="display: none;"><div data-category="main" data-key="header" data-value-type="html"></div><div data-category="settings" data-key="shell style" data-value-type="json">"minimal"</div></div>
            <div id="document"><h1>Propositional Logic</h1>
<p>This is a basic library of the rules that define a natural deduction style formal system for Propositional Logic.</p>
<hr>
<h3><strong>Constants</strong></h3>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Declare ⇔, and, ⇒, or, ¬, contradiction&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Declare </span><span class="ML__cmr">⇔</span><span class="ML__text">, and, </span><span class="ML__cmr">⇒</span><span class="ML__text">, or, </span><span class="ML__ams">¬</span><span class="ML__text">, and </span><span class="ML__cmr">→←</span></span></span></span></span></p>
<h3><strong>Definitions</strong></h3>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p style="text-align: left;"><strong>and+</strong></p>
<p style="text-align: left;"><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W and V&quot;" data-metadata_latex="&quot; W\\text{ and } V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> and </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>and-</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W and V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> and </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;" data-metadata_latex="&quot;W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>implies+</strong></p>
<div class="lurch-atom" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W implies V&quot;" data-metadata_latex="&quot; W\\Rightarrow V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>implies- (modus ponens)</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W implies V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>iff+</strong></p>
<div class="lurch-atom" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span>&nbsp;</p>
</div>
<p>&nbsp;</p>
<div class="lurch-atom" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;" data-metadata_latex="&quot;W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W iff V&quot;" data-metadata_latex="&quot; W\\Leftrightarrow V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇔</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>iff-</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W iff V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇔</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<div class="lurch-atom" data-metadata_type="&quot;subproof&quot;" data-shell_title="">
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;" data-metadata_latex="&quot;V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;subproof&quot;" data-shell_title="">
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;" data-metadata_latex="&quot;W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>or+</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W or V&quot;" data-metadata_latex="&quot; W\\text{ or } V&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V or W&quot;" data-metadata_latex="&quot; V\\text{ or } W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>or- (proof by cases)</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W or V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W implies U&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.11em;">U</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume V implies U&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.11em;">U</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;U&quot;" data-metadata_latex="&quot;U&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.11em;">U</span></span></span></span></span>&nbsp;</p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>not+ (proof by contradiction)</strong></p>
<div class="lurch-atom" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;contradiction&quot;" data-metadata_latex="&quot;\\rightarrow\\leftarrow&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">→←</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not W&quot;" data-metadata_latex="&quot;\\neg W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>not- (proof by contradiction)</strong></p>
<div class="lurch-atom" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p>&nbsp;<span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;contradiction&quot;" data-metadata_latex="&quot;\\rightarrow\\leftarrow&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">→←</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;" data-metadata_latex="&quot;W&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>contradiction+</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span><br><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;→←&quot;" data-metadata_latex="&quot;\\rightarrow\\leftarrow&quot;" data-metadata_given="false"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">→←</span></span></span></span></span></p>
</div>
<hr>
<p>&nbsp;</p></div>
        </div></div><div class="lurch-atom-body"><table><colgroup><col><col></colgroup><tbody><tr><td colspan="2"><b>Imported dependency document</b></td></tr><tr><td>Description:</td><td><tt>none</tt></td></tr><tr><td>Source:</td><td><tt>math/Prop-Rules.lurch</tt> (web)</td></tr><tr><td>Auto-refresh:</td><td>yes</td></tr></tbody></table></div></div></div></div>
            <div id="document"><p>&nbsp;</p>
<h1>Predicate Logic with Equality</h1>
<p>This is a basic library of the rules that define a natural deduction style formal system for Predicate Logic with equality.&nbsp;</p>
<hr>
<div>
<h3>Constants</h3>
<div><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Declare ∀, ∃, ∃!, =&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Declare </span><span class="ML__cmr">∀</span><span class="ML__text">, </span><span class="ML__cmr">∃</span><span class="ML__text">, </span><span class="ML__cmr">∃!</span><span class="ML__text">, and </span><span class="ML__cmr">=</span></span></span></span></span> to be constants.</div>
<h3>Quantifier Rules</h3>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong style="font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;">forall+</strong></p>
<div class="lurch-atom" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Let z&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Let </span><span class="ML__mathit" style="margin-right: 0.05em;">z</span></span></span></span></span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(a variable declaration)&nbsp;</p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(z)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.05em;">z</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
</div>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;forall x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∀</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span>&nbsp;</p>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>forall-</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume forall x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cmr">∀</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(t)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.61508em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">t</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>exists+</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume 𝜆P(t)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.61508em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">t</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;exists x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∃</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
</div>
</div>
<div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>exists-</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume exists x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cmr">∃</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(c) for some c&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">c</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> for some </span><span class="ML__mathit">c</span></span></span></span></span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (constant declaration)</p>
</div>
<h3>Equality</h3>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>reflexivity&nbsp; &nbsp;</strong><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W=W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">=</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>substitution</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume w=v&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.03em;">w</span><span class="ML__cmr">=</span><span class="ML__mathit" style="margin-right: 0.04em;">v</span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume 𝜆P(w)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.03em;">w</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(v)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.04em;">v</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span>&nbsp;</p>
</div>
</div>
<h3>Unique Existence</h3>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>unique existence-</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume ∃!x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cmr">∃!</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;𝜆P(c) and (forall y.(𝜆P(y) implies y=c)) for some c&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">c</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> and </span><span class="ML__left-right" style="margin-top: -0.25em; height: 1em;"><span class="ML__small-delim ML__open">(</span><span class="ML__cmr">∀</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">.</span><span class="ML__left-right" style="margin-top: -0.25em; height: 1em;"><span class="ML__small-delim ML__open">(</span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.625em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">=</span><span class="ML__mathit">c</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> for some </span><span class="ML__mathit">c</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>unique existence+</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume 𝜆P(t)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.61508em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">t</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<div class="lurch-atom" data-metadata_type="&quot;premise&quot;" data-shell_title="">
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Let y be such that 𝜆P(y)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Let </span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__text"> be such that </span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.625em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;y=t&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.04em;">y</span><span class="ML__cmr">=</span><span class="ML__mathit">t</span></span></span></span></span></p>
</div>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;∃!x.𝜆P(x)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">∃!</span><span class="ML__mathit">x</span><span class="ML__cmr">.</span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.43056em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit">x</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span>&nbsp;</p>
</div>
<hr>
<p>&nbsp;</p>
</div>
</div></div>
        </div></div><div class="lurch-atom-body"><table><colgroup><col><col></colgroup><tbody><tr><td colspan="2"><b>Imported dependency document</b></td></tr><tr><td>Description:</td><td><tt>none</tt></td></tr><tr><td>Source:</td><td><tt>math/Pred-Rules.lurch</tt> (web)</td></tr><tr><td>Auto-refresh:</td><td>yes</td></tr></tbody></table></div></div></div></div>
            <div id="document"><div>
<div>
<p>&nbsp;</p>
</div>
</div>
<h1>Logic Theorems</h1>
<p>This is a basic library of the rules that are theorems provable in the system defined by the rules in the Predicate Logic with Equality library.</p>
<hr>
<h3>Constants</h3>
<p>No additional constants required.</p>
<h3>Theorems (as rules)</h3>
<div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>excluded middle</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W or not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>double negative</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (not W) ≡ W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: -0.2em; height: 0.8999999999999999em;"><span class="ML__small-delim ML__open">(</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">≡</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>commutativity of 'or'</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W or V &quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V or W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>associativity of 'or'</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;(W or V) or U ≡ W or (V or U)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.11em;">U</span><span class="ML__cmr">≡</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.11em;">U</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
</div>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>alternate definition of 'implies'</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W implies V ≡ not W or V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__cmr">≡</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>alternate or-</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W or V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>alternate or-</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume W or V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume not V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
</div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>negated implication</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (W implies V)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span> &nbsp;<span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;≡&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">≡</span></span></span></span></span>&nbsp; <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span> and&nbsp; <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>contrapositive</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W implies V &quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__cmr">⇒</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span> &nbsp;<span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;≡ &quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__cmr">≡</span></span></span></span></span> &nbsp;<span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not V implies not W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__cmr">⇒</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>DeMorgan's Law</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (W and V) ≡ not W or not V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: 0em; height: 0.69444em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> and </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">≡</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>DeMorgan's Law</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;not (W or V) ≡ not W and not V&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__ams">¬</span><span class="ML__left-right" style="margin-top: 0em; height: 0.68333em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> or </span><span class="ML__mathit" style="margin-right: 0.23em;">V</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">≡</span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.14em;">W</span><span class="ML__text"> and </span><span class="ML__ams">¬</span><span class="ML__mathit" style="margin-right: 0.23em;">V</span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Anything follows from a contradiction</strong></p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;Assume →←&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">Assume </span><span class="ML__cmr">→←</span></span></span></span></span>&nbsp;</p>
<p><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;W&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit" style="margin-right: 0.14em;">W</span></span></span></span></span></p>
</div>
<hr></div>
<div class="lurch-atom" data-metadata_type="&quot;proof&quot;" data-shell_title="Proof:">
<p>&nbsp;</p>
</div>
</div></div>
        </div></div><div class="lurch-atom-body"><table><colgroup><col><col></colgroup><tbody><tr><td colspan="2"><b>Imported dependency document</b></td></tr><tr><td>Description:</td><td><tt>none</tt></td></tr><tr><td>Source:</td><td><tt>math/Logic-theorems-Rules.lurch</tt> (web)</td></tr><tr><td>Auto-refresh:</td><td>yes</td></tr></tbody></table></div></div></div></div>
            <div id="document"></div>
        